"use client";  // Add this line
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

import { useSelector, useDispatch } from 'react-redux';
import { RootState } from '@/store';
import { setBusinessView, setClientView } from '@/store/slices/view-slice';

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

const CRMIcon = () => (
    <svg
        className="w-8 h-8 absolute top-4 left-4 z-50"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 100 100"
    >
        <polygon points="50,15 90,85 10,85" fill="black" />
    </svg>
);

const ProfileIcon = () => (
    <svg
        className="w-8 h-8 absolute top-4 right-4 z-50"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 100 100"
    >
        <circle cx="50" cy="50" r="40" stroke="black" strokeWidth="5" fill="none" />
        <circle cx="50" cy="40" r="20" fill="black" />
    </svg>
);

const BusinessLogo = () => (
    <svg className="w-full h-full object-contain" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
        <rect x="20" y="20" width="60" height="60" stroke="black" fill="none" strokeWidth="5" />
        <line x1="20" y1="20" x2="80" y2="80" stroke="black" strokeWidth="5" />
        <circle cx="50" cy="50" r="15" fill="black" />
    </svg>
);

const ClientLogo = () => (
    <svg className="w-full h-full object-contain" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
        <circle cx="50" cy="50" r="40" stroke="black" fill="none" strokeWidth="5" />
        <line x1="10" y1="50" x2="90" y2="50" stroke="black" strokeWidth="5" />
        <circle cx="30" cy="50" r="10" fill="black" />
        <circle cx="70" cy="50" r="10" fill="black" />
    </svg>
);

export default function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {
    const dispatch = useDispatch();
    const activeView = useSelector((state: RootState) => state.view.activeView);

    return (
        <html lang="en">
        <body className="relative">
        {/* CRM Icon on top-left */}
        <CRMIcon />
        {/* Profile Icon on top-right */}
        <ProfileIcon />

        <div className="flex min-h-screen w-full flex-col bg-muted/40 overflow-hidden">
            {/* Main layout */}
            <div className="flex flex-col md:flex-row w-full h-full items-center justify-center space-x-4">
                <div
                    className={`w-full h-full md:w-1/2 flex items-center justify-center bg-gray-200 transition-all ${
                        activeView === 'business' ? '' : 'hidden md:flex'
                    }`}
                >
                    <div className="w-3/4 h-3/4">
                        <BusinessLogo />
                    </div>
                </div>
                <div
                    className={`w-full h-full md:w-1/2 flex items-center justify-center bg-gray-200 transition-all ${
                        activeView === 'client' ? '' : 'hidden md:flex'
                    }`}
                >
                    <div className="w-3/4 h-3/4">
                        <ClientLogo />
                    </div>
                </div>
            </div>

            {/* Tab switcher for mobile */}
            <div className="md:hidden w-full flex justify-between bg-gray-300 p-4">
                <button
                    className={`flex-1 text-center p-2 ${
                        activeView === 'business' ? 'bg-gray-500 text-white' : 'bg-gray-300'
                    }`}
                    onClick={() => dispatch(setBusinessView())}
                >
                    Business
                </button>
                <button
                    className={`flex-1 text-center p-2 ${
                        activeView === 'client' ? 'bg-gray-500 text-white' : 'bg-gray-300'
                    }`}
                    onClick={() => dispatch(setClientView())}
                >
                    Client
                </button>
            </div>

            {/* Content Area */}
            <div className="flex-1 flex flex-col">{children}</div>
        </div>
        </body>
        </html>
    );
}
